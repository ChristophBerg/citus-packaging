#!/bin/bash

# make bash behave
set -euo pipefail
IFS=$'\n\t'

pgversions='9.4 9.5'
topdir=$(pwd)
packagesdir=${topdir}/packages
badusage=64

if [ "$#" -ne 2 ]; then
    echo "$0: project and build type required" >&2
    exit $badusage
fi

project=$1
buildtype=$2

name=$(git config --get user.name)
email=$(git config --get user.email)
packager="${name} <${email}>"

mkdir -p "${packagesdir}"

while read -r line; do
    IFS=',' read -r os release <<< "$line"

    outputdir="${packagesdir}/${os}-${release}"
    mkdir -p "${outputdir}"

    if [[ "${os}" = 'debian' ]] || [[ "${os}" = 'ubuntu' ]]; then
        docker run --rm -v "${outputdir}:/packages" \
                   -e "GITHUB_TOKEN=${GITHUB_TOKEN}" \
                   -e "DEBFULLNAME=${name}" -e "DEBEMAIL=${email}" \
                   "citusdata/packaging:${os}-${release}-all" "$project" "$buildtype"
    elif [[ "${os}" = 'centos' ]] || [[ "${os}" = 'fedora' ]] || [[ "${os}" = 'oraclelinux' ]]; then
        # redhat variants need to build each PostgreSQL version separately
        IFS=' '
        for pgversion in ${pgversions}; do
            pgshort=${pgversion//./}
            docker run --rm -v "${outputdir}:/packages" \
                   -e "GITHUB_TOKEN=${GITHUB_TOKEN}" \
                   -e "RPM_PACKAGER=${packager}" \
                   "citusdata/packaging:${os}-${release}-pg${pgshort}" "$project" "$buildtype"
        done
    else
        echo "$0: unrecognized OS -- ${os}" >&2
        exit $badusage
    fi
done <"${topdir}/os-list.csv"
